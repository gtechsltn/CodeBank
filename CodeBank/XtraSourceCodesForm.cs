using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using DAL;
using BLL.Service;
using DAL.Entities;

namespace CodeBank
{
    public partial class XtraSourceCodesForm : DevExpress.XtraEditors.XtraForm
    {
        private AppDbContext context = new AppDbContext();
        private SourceCodeService sourceCodeService = new SourceCodeService();
        private SourceCode sourceCode = new SourceCode();
        private Category category = new Category();

        public XtraSourceCodesForm()
        {
            InitializeComponent();
            gridControl1.DataSource = sourceCodeService.GetAll(context);
        }

        public void KaynakKodListele()
        {
            gridControl1.DataSource = sourceCodeService.GetAll(context);
        }

        private void XtraSourceCodesForm_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'codeBankDbDataSet.SourceCodes' table. You can move, or remove it, as needed.
            this.sourceCodesTableAdapter.Fill(this.codeBankDbDataSet.SourceCodes);

        }

        private void repositoryItemButtonEdit1_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            int seciliId = Convert.ToInt32(gridView1.GetFocusedRowCellValue(colId));
            if (MessageBox.Show("Seçili kayıt silinecek. Onaylıyor musunuz?", "Uyarı", MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                sourceCodeService.Delete(context, s => s.Id == seciliId);
                sourceCodeService.Save(context);
                KaynakKodListele();
            }
        }

        private void repositoryItemButtonEdit2_ButtonClick(object sender, DevExpress.XtraEditors.Controls.ButtonPressedEventArgs e)
        {
            int seciliId = Convert.ToInt32(gridView1.GetFocusedRowCellValue(colId));
            int seciliKategoriId = Convert.ToInt32(gridView1.GetFocusedRowCellValue(colCategoryId));
            XtraSourceCodeUpdateForm frm = new XtraSourceCodeUpdateForm(sourceCodeService.GetByFilter(context, s => s.Id == seciliId));
            frm.Text = seciliId.ToString() + " numaralı kaynak kodu düzenle";
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            DAL.AppDbContext dbContext = new DAL.AppDbContext();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.Categories.LoadAsync().ContinueWith(loadTask =>
            {
                // Bind data to control when loading complete
                frm.listBoxControl1.DataSource = dbContext.Categories.Local.ToBindingList();
                if (seciliKategoriId != null)
                {
                    frm.listBoxControl1.SelectedValue = seciliKategoriId;
                }
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
            frm.MdiParent = this.ParentForm;
            frm.Show();

        }
    }
}